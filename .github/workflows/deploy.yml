name: Python CI with Docker

# 동작 조건 설정 : main 브랜치에 push 혹은 pull request가 발생할 경우 동작한다.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Python 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # 1. Python 3.10 세팅
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 2. 의존성 설치 및 애플리케이션 테스트
      - name: Install dependencies and run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 3. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/issuer-crawling-app .

      # 4. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 5. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/issuer-crawling-app

  run-docker-compose:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      - env:
          WEB_DRIVER_HUB_URL: ${{ secrets.WEB_DRIVER_HUB_URL }}
          PRODUCER_NUM: ${{ secrets.PRODUCER_NUM }}
          WORKER_NUM: ${{ secrets.WORKER_NUM }}
          RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}
          DIR_CRAWLING_DATA: ${{ secrets.DIR_CRAWLING_DATA }}
          SSH_HOST_NAME: ${{secrets.SSH_HOST_NAME}}
          SSH_HOST_IP: ${{secrets.SSH_HOST_IP}}
          SSH_PASSWORD: ${{secrets.SSH_PASSWORD}}
          DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: SSH into Ubuntu server and pull the latest image
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_IP }}
          username: ${{ secrets.SSH_HOST_NAME }}
          key: ${{ secrets.SSH_PASSOWRD }}
          script: | 
            docker-compose pull
            docker-compose up -d
            docker system prune -f
